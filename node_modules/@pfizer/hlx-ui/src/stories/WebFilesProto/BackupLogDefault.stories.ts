import type { Meta, StoryObj } from '@storybook/vue3';

import TableView from '../../components/viewers/TableView/TableView.vue';
import Icon from '../../components/viewers/Icon/Icon.vue';
import ContextMenu from '../../components/widgets/ContextMenu/ContextMenu.vue';
import PageHeader from '../../components/layout/PageHeader/PageHeader.vue';
import Header from '@/stories/WebFilesProto/components/Header.vue';
import Panel from '../../components/layout/Panel/Panel.vue';
import Popup from '../../components/viewers/Popup/Popup.vue';
import SelectField from '@/components/form/SelectField';
import TextField from '@/components/form/TextField/TextField.vue';
import Checkbox from '@/components/form/Checkbox/Checkbox.vue';
import Grid from '@/components/layout/Grid';
import { provide } from 'vue';
import { Sorting } from '../../enum/Sorting';

// More on how to set up stories at: https://storybook.js.org/docs/vue/writing-stories/introduction
const meta = {
  title: 'WebFilesProto/Backup Log',
  component: TableView,
  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/vue/writing-docs/autodocs
  tags: ['autodocs'],
  argTypes: {},
  args: {
    header: [
      { key: 'fileName', label: 'File name', sorting: Sorting.ASC },
      { key: 'fileSize', label: 'File size', sorting: Sorting.DESC },
      { key: 'exportData', label: 'Export date' },
    ],
    data: [
      {
        fileName: '2022-07-21.csv',
        fileSize: '7.3 MB',
        exportData: 'Wednesday, November 9, 2022 - 06:06',
        fileID: '112951',
      },
      {
        fileName: '2022-07-21.csv',
        fileSize: '7.3 MB',
        exportData: 'Wednesday, November 9, 2022 - 06:06',
        fileID: '112951',
      },
      {
        fileName: '2022-07-21.csv',
        fileSize: '7.3 MB',
        exportData: 'Wednesday, November 9, 2022 - 06:06',
        fileID: '112951',
      },
      {
        fileName: '2022-07-21.csv',
        fileSize: '7.3 MB',
        exportData: 'Wednesday, November 9, 2022 - 06:06',
        fileID: '112951',
      },
    ],
    keygen: (param: unknown) => {
      const item = param as { name: string; age: string };

      return `${item.name}-${item.age}`;
    },
  }, // default value
} satisfies Meta<typeof TableView>;

export default meta;
type Story = StoryObj<typeof meta>;
/*
 *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.
 * See https://storybook.js.org/docs/vue/api/csf
 * to learn how to use render functions.
 */
export const Default: Story = {
  args: {},
  render: (args) => ({
    components: {
      TableView,
      ContextMenu,
      Icon,
      PageHeader,
      SelectField,
      Grid,
      TextField,
      Header,
      Popup,
      Panel,
      Checkbox,
    },
    setup() {
      provide('icon-font-config', {
        font: 'las',
        prefix: 'la-',
        iconMap: {},
      });

      return {
        args,
        adminTools: [
          { code: 'userManagement', title: 'User management' },
          { code: 'auditLog', title: 'Audit log' },
          { code: 'backupLogs', title: 'Backup logs' },
          { code: 'folderRequests', title: 'Folder requests' },
        ],
        settings: [
          { code: 'userEdit', title: 'User edit' },
          { code: 'myAuditLog', title: 'My audit log' },
          { code: 'fileReschedule', title: 'File reschedule' },
          { code: 'fileSubscriptions', title: 'File subscriptions' },
          { code: 'search', title: 'Search' },
          { code: 'userInstruction', title: 'User instruction' },
        ],
      };
    },
    template: `
      <div class="main">
        <Header></Header>
        <PageHeader title="Backup logs">
        </PageHeader>
          <div class="container">
            <Panel class="panel">
            <TextField name="search" label="File name"></TextField>
            <button class="button">Apply</button>
            </Panel>
          </div>
        <div class="container">
          <TableView v-bind="args" >
          </TableView>
        </div>
      </div>
    `,
  }),
};
