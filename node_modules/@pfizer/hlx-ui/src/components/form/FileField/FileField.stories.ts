import type { Meta, StoryObj } from '@storybook/vue3';
import readme from './README.md?raw';

import FileField from './FileField.vue';

// More on how to set up stories at: https://storybook.js.org/docs/vue/writing-stories/introduction
const meta = {
  title: 'Form/File',
  component: FileField,
  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/vue/writing-docs/autodocs
  tags: ['autodocs'],
  parameters: {
    docs: {
      description: { component: readme },
    },
  },
  argTypes: {},
  args: {}, // default value
  render: (args) => ({
    components: { FileField },
    setup() {
      return { args };
    },
    data() {
      return {
        files: '',
      };
    },
    template: `
      <FileField v-model="files" name="test" label="Upload file" />
    `,
  }),
} satisfies Meta<typeof FileField>;

export default meta;
type Story = StoryObj<typeof meta>;
/*
 *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.
 * See https://storybook.js.org/docs/vue/api/csf
 * to learn how to use render functions.
 */
export const Default: Story = {
  args: {
    label: 'Input label',
    name: 'name',
    placeholder: 'Choose some files',
    multiple: true,
  },
};
