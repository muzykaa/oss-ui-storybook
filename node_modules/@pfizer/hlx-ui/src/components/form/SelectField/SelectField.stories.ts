import type { Meta, StoryObj } from '@storybook/vue3';
import readme from './README.md?raw';

import SelectField from './SelectField.vue';

// More on how to set up stories at: https://storybook.js.org/docs/vue/writing-stories/introduction
const meta = {
  title: 'Form/SelectField',
  component: SelectField,
  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/vue/writing-docs/autodocs
  tags: ['autodocs'],
  parameters: {
    docs: {
      description: { component: readme },
    },
  },
  argTypes: {},
  args: {}, // default value
} satisfies Meta<typeof SelectField>;

export default meta;
type Story = StoryObj<typeof meta>;
/*
 *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.
 * See https://storybook.js.org/docs/vue/api/csf
 * to learn how to use render functions.
 */
export const Default: Story = {
  args: {
    label: 'Select field',
    name: 'text',
    options: [
      { code: 'first', label: 'First' },
      { code: 'second', label: 'Second' },
      { code: 'third', label: 'Third' },
    ],
  },
  render: (args) => ({
    components: { SelectField },
    setup() {
      return {
        args,
      };
    },
    data() {
      return {
        items: '',
      };
    },

    template: `
        <SelectField v-bind="args" v-model="items" />
    `,
  }),
};

export const Multiple: Story = {
  args: {
    label: 'Select field',
    name: 'text',
    multiple: true,
    options: [
      { code: 'first', label: 'First' },
      { code: 'second', label: 'Second' },
      { code: 'third', label: 'Third' },
    ],
  },
  render: (args) => ({
    components: { SelectField },
    setup() {
      return {
        args,
      };
    },
    data() {
      return {
        items: [],
      };
    },

    template: `
        <SelectField v-bind="args" v-model="items" />
    `,
  }),
};
