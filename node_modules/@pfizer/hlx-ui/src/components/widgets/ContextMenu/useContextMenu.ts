import { ref } from 'vue';

const menus = ref<Record<string, boolean>>({});

export const useContextMenu = () => {
  const register = (key: string): void => {
    menus.value = {
      ...menus.value,
      [key]: false,
    };
  };

  const destroy = () => {
    menus.value = {};
  };

  const closeAll = () => {
    const newList: Record<string, boolean> = {};
    for (const key of Object.keys(menus.value)) {
      newList[key] = false;
    }

    menus.value = newList;
  };

  const close = (key: string) => {
    menus.value = {
      ...menus.value,
      [key]: false,
    };
  };

  const toggle = (key: string) => {
    menus.value = {
      ...menus.value,
      [key]: !menus.value[key],
    };
  };

  return {
    register,
    menus,
    closeAll,
    close,
    toggle,
    destroy,
  };
};
