import type { Meta, StoryObj } from '@storybook/vue3';
import readme from './README.md?raw';

import Property from './Property.vue';

// More on how to set up stories at: https://storybook.js.org/docs/vue/writing-stories/introduction
const meta = {
  title: 'View/Property',
  component: Property,
  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/vue/writing-docs/autodocs
  tags: ['autodocs'],
  parameters: {
    docs: {
      description: { component: readme },
    },
  },
  argTypes: {
    variant: {
      control: 'select',
      options: ['large', 'small-label', 'plain-text'],
    },
  },
  args: {
    variant: 'plain-text',
  }, // default value
} satisfies Meta<typeof Property>;

export default meta;
type Story = StoryObj<typeof meta>;
/*
 *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.
 * See https://storybook.js.org/docs/vue/api/csf
 * to learn how to use render functions.
 */
export const Default: Story = {
  args: {
    label: 'label',
  },
  render: (args) => ({
    components: { Property },
    setup() {
      return {
        args,
      };
    },
    template: `
        <Property variant="large" label="Large">
          Lorem ipsum
        </Property>
        <Property variant="large" label="Large" thin>
          Thin
        </Property>
        <Property variant="plain-text" label="Plain Text">
          Lorem ipsum
        </Property>
        <Property variant="small-label" label="Small Label">
          Lorem ipsum
        </Property>
    `,
  }),
};
