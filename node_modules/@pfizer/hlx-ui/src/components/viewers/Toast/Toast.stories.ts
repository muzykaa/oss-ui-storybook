import type { Meta, StoryObj } from '@storybook/vue3';
import readme from './README.md?raw';

import ToastStack from './ToastStack.vue';
import { provide } from 'vue';
import uniqueId from 'lodash-es/uniqueId';

// More on how to set up stories at: https://storybook.js.org/docs/vue/writing-stories/introduction
const meta = {
  title: 'View/Toast',
  component: ToastStack,
  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/vue/writing-docs/autodocs
  tags: ['autodocs'],
  parameters: {
    docs: {
      description: { component: readme },
    },
  },
  argTypes: {},
  args: {}, // default value
} satisfies Meta<typeof ToastStack>;

export default meta;
type Story = StoryObj<typeof meta>;
/*
 *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.
 * See https://storybook.js.org/docs/vue/api/csf
 * to learn how to use render functions.
 */
export const Default: Story = {
  args: {
    modelValue: [],
  },
  render: (args) => ({
    components: { ToastStack },
    setup() {
      provide('icon-font-config', {
        font: 'las',
        prefix: 'la-',
        iconMap: {
          close: 'times',
        },
      });

      return {
        args,
      };
    },
    data() {
      return {
        items: [],
      };
    },
    methods: {
      btnClickHandler(type: string) {
        this.items = [
          ...this.items,
          {
            title: 'Toast item text ' + type,
            ttl: 5000,
            type,
            id: uniqueId(),
          },
        ];
      },
    },
    template: `
        <button @click="btnClickHandler('success')" type="button">Add success toast</button>
        <button @click="btnClickHandler('info')" type="button">Add info toast</button>
        <button @click="btnClickHandler('warning')" type="button">Add warning toast</button>
        <button @click="btnClickHandler('error')" type="button">Add error toast</button>
        <ToastStack v-model="items" position="right" />
    `,
  }),
};
