@use '../../../sass/variables/deco';
@use '../../../sass/variables/colors';
@use '../../../sass/variables/box-model';
@use '../../../sass/variables/typography';
@use '../../../sass/mixins/img';
@use '../../../sass/mixins/text';
@use '../../../sass/mixins/responsive';

.toast-stack {
  position: fixed;
  z-index: deco.$z-index-popup + 10;
  padding: box-model.$spacing-main;
  max-height: 60vh;
  overflow-y: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  gap: box-model.$spacing-main;
  top: box-model.$spacing-main;
  width: 80vw;

  &.left {
    left: box-model.$spacing-main;
    right: unset;
  }

  &.center {
    left: 50%;
    transform: translateX(-50%);
  }

  &.right {
    left: unset;
    right: box-model.$spacing-main;
  }

  @include responsive.desktop() {
    width: 250px;
  }
}

.toast {
  display: flex;
  gap: box-model.$spacing-main;
  padding: box-model.$spacing-main;
  border-radius: box-model.$radius-main;
  border: deco.$border-width-main solid;
  box-shadow: deco.$box-shadow-flyout;
  justify-content: space-between;
  background-color: colors.$color-main-bg;
  width: 100%;
  transition: transform .25s ease-in-out;
  transform: translateX(150%);

  &.show {
    transform: translateX(0);
  }

  &.success {
    border-color: colors.$color-success;
  }

  &.info {
    border-color: colors.$color-accent-2;
  }

  &.warning {
    border-color: colors.$color-warning;
  }

  &.error {
    border-color: colors.$color-danger;
  }

  & &__content {
    @include text.plain-text();
  }
}
