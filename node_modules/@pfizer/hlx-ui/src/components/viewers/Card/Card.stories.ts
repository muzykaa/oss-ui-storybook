import type { Meta, StoryObj } from '@storybook/vue3';
import readme from './README.md?raw';

import Card from './Card.vue';

// More on how to set up stories at: https://storybook.js.org/docs/vue/writing-stories/introduction
const meta = {
  title: 'View/Card',
  component: Card,
  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/vue/writing-docs/autodocs
  tags: ['autodocs'],
  parameters: {
    docs: {
      description: { component: readme },
    },
  },
  argTypes: {},
  args: {}, // default value
  render: (args) => ({
    components: { Card },
    setup() {
      return { args };
    },
    template: `
      <Card>
        Lorem Ipsum
      </Card>

      <Card>
        <template #header>
          <h1>With header & Footer</h1>
        </template>

        <template #default>
          Lorem Ipsum
        </template>

        <template #footer>
          <div>
            <button type="button">Go To</button>
          </div>
        </template>
      </Card>
    `,
  }),
} satisfies Meta<typeof Card>;

export default meta;
type Story = StoryObj<typeof meta>;
/*
 *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.
 * See https://storybook.js.org/docs/vue/api/csf
 * to learn how to use render functions.
 */
export const Default: Story = {
  args: {},
};
