import type { Meta, StoryObj } from '@storybook/vue3';
import readme from './README.md?raw';

import Flyout from './Flyout.vue';

// More on how to set up stories at: https://storybook.js.org/docs/vue/writing-stories/introduction
const meta = {
  title: 'View/Flyout',
  component: Flyout,
  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/vue/writing-docs/autodocs
  tags: ['autodocs'],
  parameters: {
    docs: {
      description: { component: readme },
    },
  },
  argTypes: {},
  args: {}, // default value
  render: (args) => ({
    components: { Flyout },
    data() {
      return {
        position: {
          top: 0,
          left: 0,
        },
        isOpen: false,
        position2: {
          top: 0,
          left: 0,
        },
        isOpen2: false,
      };
    },
    setup() {
      return { args };
    },
    methods: {
      btnClickHandler(event: MouseEvent) {
        this.position = {
          top: event.clientY,
          left: event.clientX,
        };

        this.isOpen = !this.isOpen;
      },
      btn2ClickHandler(event: MouseEvent) {
        this.position2 = {
          top: event.clientY,
          left: event.clientX,
        };

        this.isOpen2 = !this.isOpen2;
      },
    },
    template: `
      <button @click="btnClickHandler">Toggle</button>
      <Flyout v-bind="args" :position="position" v-model="isOpen">
        <h1>I am flyout</h1>
      </Flyout>
      <button @click="btn2ClickHandler">Toggle 2</button>
      <Flyout v-bind="args" :position="position2" v-model="isOpen2">
        <h1>I am flyout 2</h1>
      </Flyout>
    `,
  }),
} satisfies Meta<typeof Flyout>;

export default meta;
type Story = StoryObj<typeof meta>;
/*
 *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.
 * See https://storybook.js.org/docs/vue/api/csf
 * to learn how to use render functions.
 */
export const Default: Story = {
  args: {
    position: {
      top: 0,
      left: 0,
    },
    modelValue: false,
  },
};
