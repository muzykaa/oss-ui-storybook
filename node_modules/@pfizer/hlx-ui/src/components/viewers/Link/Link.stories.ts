import type { Meta, StoryObj } from '@storybook/vue3';
import readme from './README.md?raw';

import Link from './Link.vue';
import { useNavigation } from '@/providers/navigation';

// More on how to set up stories at: https://storybook.js.org/docs/vue/writing-stories/introduction
const meta = {
  title: 'View/Link',
  component: Link,
  // This component will have an automatically generated docsPage entry: https://storybook.js.org/docs/vue/writing-docs/autodocs
  tags: ['autodocs'],
  parameters: {
    docs: {
      description: { component: readme },
    },
  },
  argTypes: {},
  args: {
    url: '',
  }, // default value
  render: (args) => ({
    components: { Link },
    setup() {
      const provider = useNavigation();
      provider.setupNavConfig({
        link: {
          component: 'a',
          propsMap: {
            url: 'href',
          },
        },
      });

      return { args };
    },
    template: `
      <Link url="https://google.com">Test Link</Link>
    `,
  }),
} satisfies Meta<typeof Link>;

export default meta;
type Story = StoryObj<typeof meta>;
/*
 *ðŸ‘‡ Render functions are a framework specific feature to allow you control on how the component renders.
 * See https://storybook.js.org/docs/vue/api/csf
 * to learn how to use render functions.
 */
export const Default: Story = {
  args: {},
};
