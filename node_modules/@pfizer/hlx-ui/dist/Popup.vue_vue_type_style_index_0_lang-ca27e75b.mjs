import { defineComponent as v, ref as y, useSlots as w, watch as V, withDirectives as g, openBlock as o, createElementBlock as t, normalizeClass as B, Fragment as b, createElementVNode as c, toDisplayString as C, createVNode as u, createCommentVNode as a, unref as m, renderSlot as _, vShow as N } from "vue";
import { _ as h } from "./Icon.vue_vue_type_script_setup_true_lang-bc90b628.mjs";
const S = {
  key: 0,
  class: "popup__header"
}, $ = { class: "popup__title" }, D = {
  key: 1,
  class: "popup__content"
}, E = {
  key: 2,
  class: "popup__actions"
}, z = /* @__PURE__ */ v({
  __name: "Popup",
  props: {
    title: {},
    width: {},
    modelValue: { type: Boolean },
    hideBackdrop: { type: Boolean },
    className: {},
    mode: { default: "default" }
  },
  emits: ["update:modelValue"],
  setup(f, { emit: k }) {
    const d = f, n = y(null), p = w(), r = () => {
      k("update:modelValue", !1);
    };
    return V(
      () => d.modelValue,
      (e) => {
        var i, l, s;
        if (!e) {
          (i = n.value) == null || i.close();
          return;
        }
        switch (d.mode) {
          case "default":
            (l = n.value) == null || l.show();
            break;
          case "modal":
            (s = n.value) == null || s.showModal();
            break;
        }
      }
    ), (e, i) => {
      var l, s;
      return g((o(), t("dialog", {
        ref_key: "dialogRef",
        ref: n,
        class: B(["popup", e.className, e.mode, { [e.width]: e.width, hideBackdrop: e.hideBackdrop }])
      }, [
        e.modelValue ? (o(), t(b, { key: 0 }, [
          e.width !== "full-screen" && ((l = e.title) != null && l.length) ? (o(), t("div", S, [
            c("div", $, C(e.title), 1),
            c("button", {
              class: "invert popup__close-btn",
              onClick: r
            }, [
              u(h, { name: "close" })
            ])
          ])) : a("", !0),
          m(p).content ? (o(), t("div", D, [
            _(e.$slots, "content"),
            (s = e.title) != null && s.length ? a("", !0) : (o(), t("button", {
              key: 0,
              class: "invert popup__close-btn",
              onClick: r
            }, [
              u(h, { name: "close" })
            ]))
          ])) : a("", !0),
          m(p).actions ? (o(), t("div", E, [
            _(e.$slots, "actions")
          ])) : a("", !0)
        ], 64)) : a("", !0)
      ], 2)), [
        [N, e.modelValue]
      ]);
    };
  }
});
export {
  z as _
};
