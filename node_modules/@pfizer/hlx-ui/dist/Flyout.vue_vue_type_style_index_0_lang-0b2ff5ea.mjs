import { defineComponent as c, watch as d, onUnmounted as p, openBlock as l, createBlock as m, Teleport as u, createElementBlock as y, normalizeClass as f, unref as i, normalizeStyle as v, renderSlot as k, createCommentVNode as w } from "vue";
const C = /* @__PURE__ */ c({
  __name: "Flyout",
  props: {
    className: {},
    position: {},
    large: { type: Boolean },
    modelValue: { type: Boolean },
    layer: {},
    disableScrollLock: { type: Boolean },
    interactive: { type: Boolean },
    width: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: r }) {
    const o = a, t = () => {
      r("update:modelValue", !1);
    }, s = (e) => {
      o.interactive && e.preventDefault();
    }, n = Object.freeze({
      x: window.innerWidth / 2,
      y: window.innerHeight / 2
    });
    return d(
      () => o.modelValue,
      (e) => {
        e ? setTimeout(() => {
          document.addEventListener("click", t);
        }, 250) : document.removeEventListener("click", t);
      }
    ), p(() => {
      document.removeEventListener("click", t);
    }), (e, h) => (l(), m(u, { to: "body" }, [
      e.modelValue ? (l(), y("div", {
        key: 0,
        class: f([
          "flyout",
          e.className,
          {
            large: e.large,
            "invert-x": e.position.left > i(n).x,
            "invert-y": e.position.top > i(n).y
          }
        ]),
        style: v({ top: `${e.position.top}px`, left: `${e.position.left}px`, width: `${e.width}px` }),
        onClick: s
      }, [
        k(e.$slots, "default")
      ], 6)) : w("", !0)
    ]));
  }
});
export {
  C as _
};
