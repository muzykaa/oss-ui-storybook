import { defineComponent as m, openBlock as o, createElementBlock as r, normalizeClass as u, Fragment as d, renderList as c, createBlock as p, mergeProps as _, withCtx as f, createTextVNode as k, toDisplayString as V, createCommentVNode as g } from "vue";
import { _ as C } from "./Toast.vue_vue_type_style_index_0_lang-81b08ff2.mjs";
import "./Icon.vue_vue_type_script_setup_true_lang-bc90b628.mjs";
const B = /* @__PURE__ */ m({
  __name: "ToastStack",
  props: {
    position: { default: "right" },
    modelValue: {}
  },
  emits: ["update:modelValue"],
  setup(a, { emit: n }) {
    const s = a, i = (e) => {
      n(
        "update:modelValue",
        s.modelValue.filter((l) => l.id !== e.id)
      );
    };
    return (e, l) => e.modelValue.length ? (o(), r("div", {
      key: 0,
      class: u(["toast-stack", e.position])
    }, [
      (o(!0), r(d, null, c(e.modelValue, (t) => (o(), p(C, _({
        key: t.title
      }, t, { onClose: i }), {
        content: f(() => [
          k(V(t.title), 1)
        ]),
        _: 2
      }, 1040))), 128))
    ], 2)) : g("", !0);
  }
});
export {
  B as default
};
