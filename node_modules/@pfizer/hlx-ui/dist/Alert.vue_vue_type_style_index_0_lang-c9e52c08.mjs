import { defineComponent as i, ref as a, onMounted as _, onUnmounted as m, openBlock as u, createElementBlock as d, normalizeClass as p, createElementVNode as n, renderSlot as f, createVNode as v } from "vue";
import { _ as T } from "./Icon.vue_vue_type_script_setup_true_lang-bc90b628.mjs";
const h = { class: "container" }, y = ["innerHTML"], b = /* @__PURE__ */ i({
  __name: "Alert",
  props: {
    id: {},
    content: {},
    type: {},
    ttl: {}
  },
  emits: ["close"],
  setup(r, { emit: c }) {
    const s = r, e = a(!1);
    let t = 0;
    const l = () => {
      e.value = !1, setTimeout(() => {
        c("close", s);
      }, 400);
    };
    return _(() => {
      setTimeout(() => {
        e.value = !0;
      }, 10), t = window.setTimeout(() => {
        l();
      }, s.ttl);
    }), m(() => {
      t && clearTimeout(t);
    }), (o, k) => (u(), d("div", {
      class: p(["alert", o.type, { show: e.value }])
    }, [
      n("div", h, [
        n("div", {
          class: "alert__content",
          innerHTML: o.content
        }, null, 8, y),
        n("button", {
          type: "button",
          class: "invert alert__btn-close",
          onClick: l
        }, [
          f(o.$slots, "close", {}, () => [
            v(T, { name: "close" })
          ])
        ])
      ])
    ], 2));
  }
});
export {
  b as _
};
