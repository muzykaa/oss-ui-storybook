import { defineComponent as c, openBlock as d, createBlock as i, withCtx as t, createElementVNode as a } from "vue";
import { _ as p } from "./FieldWrapper.vue_vue_type_script_setup_true_lang-69dbb8a3.mjs";
import "./Icon.vue_vue_type_script_setup_true_lang-bc90b628.mjs";
import "./Popup.vue_vue_type_style_index_0_lang-ca27e75b.mjs";
import "./dom-c1ddc50b.mjs";
const m = { class: "checkbox-wrapper" }, u = ["disabled", "checked"], b = /* @__PURE__ */ a("span", { class: "checkbox-wrapper__checkmark" }, null, -1), V = /* @__PURE__ */ c({
  __name: "Checkbox",
  props: {
    name: {},
    disabled: { type: Boolean },
    modelValue: { type: Boolean },
    label: {},
    error: {},
    info: {},
    className: {},
    required: { type: Boolean }
  },
  emits: ["update:modelValue"],
  setup(l, { emit: r }) {
    const s = l, n = (e) => {
      const o = e instanceof Event ? e.target.checked : e;
      r("update:modelValue", o, s.name);
    };
    return (e, o) => (d(), i(p, {
      label: e.label,
      error: e.error,
      info: e.info,
      required: e.required,
      "class-name": `radio-field ${e.className || ""} ${e.disabled ? "disabled" : ""} `,
      component: "div"
    }, {
      default: t(() => [
        a("label", m, [
          a("input", {
            disabled: e.disabled,
            type: "checkbox",
            class: "checkbox-wrapper__checkbox",
            checked: e.modelValue,
            onChange: n
          }, null, 40, u),
          b
        ])
      ]),
      _: 1
    }, 8, ["label", "error", "info", "required", "class-name"]));
  }
});
export {
  V as default
};
