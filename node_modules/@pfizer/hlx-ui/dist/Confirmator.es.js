import { defineComponent as l, openBlock as p, createBlock as i, withCtx as d, renderSlot as r } from "vue";
import { _ as m } from "./Modal.vue_vue_type_script_setup_true_lang-68462e3c.mjs";
import "./Popup.vue_vue_type_style_index_0_lang-ca27e75b.mjs";
import "./Icon.vue_vue_type_script_setup_true_lang-bc90b628.mjs";
import "./Preloader.vue_vue_type_style_index_0_lang-f533812c.mjs";
const C = /* @__PURE__ */ l({
  __name: "Confirmator",
  props: {
    title: {},
    accept: {},
    acceptIcon: {},
    cancel: {},
    cancelIcon: {},
    modelValue: { type: Boolean },
    context: {},
    isLoading: { type: Boolean }
  },
  emits: ["update:modelValue", "accept"],
  setup(a, { emit: c }) {
    const o = a, n = (e) => c("update:modelValue", e), t = () => c("accept", o.context);
    return (e, s) => (p(), i(m, {
      "model-value": e.modelValue,
      "class-name": "modal-confirmator",
      title: e.title,
      "is-loading": e.isLoading,
      accept: e.accept,
      "accept-icon": e.acceptIcon,
      cancel: e.cancel,
      "cancel-icon": e.cancelIcon,
      "onUpdate:modelValue": n,
      onAccept: t
    }, {
      default: d(() => [
        r(e.$slots, "default")
      ]),
      _: 3
    }, 8, ["model-value", "title", "is-loading", "accept", "accept-icon", "cancel", "cancel-icon"]));
  }
});
export {
  C as default
};
